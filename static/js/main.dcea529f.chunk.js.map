{"version":3,"sources":["styledComponents/styledReset.ts","components/atoms/CardRegisterInput/CardRegisterInput.tsx","components/molecules/LinkedInput/LinkedInput.tsx","components/organisms/VirtualKeyboard/VirtualKeyboard.tsx","components/molecules/LinkedInputUsingKeyboard/LinkedInputUsingKeyboard.tsx","components/templates/RegisterCard/RegisterCard.tsx","App.tsx","styledComponents/theme.ts","serviceWorker.ts","index.tsx"],"names":["StyledReset","createGlobalStyle","_templateObject","styled","input","CardRegisterInput_templateObject","p","inputWidth","theme","colors","inputColor","LinkedInput","forwardRef","props","ref","state","initVal","maxLength","next","inputRef","useRef","_useState","useState","_useState2","Object","slicedToArray","value","setValue","useImperativeHandle","focus","current","blur","getValue","getRef","getNext","findStartItem","length","offFocus","onFocusRef","onChange","event","target","RegExp","exec","useLinkedInput","react_default","a","createElement","CardRegisterInput","type","placeholder","Wrapper","div","VirtualKeyboard_templateObject","KeypadHeader","_templateObject2","KeyPad","_templateObject3","KeyPadButton","button","_templateObject4","KeypadFooter","_templateObject5","Button","_templateObject6","VirtualKeyboard","onClick","handleClose","numbers","map","val","key","title","handleKeyboardNumber","handleKeyboardNumberDelete","LinkedInputUsingKeyboard_templateObject","isFocus","LinkedInputUsingKeypad","keyboard","_useState3","_useState4","handleFocus","handleDocumentClickEvent","e","contains","document","removeEventListener","removeLastValue","slice","useEffect","addEventListener","onChangeFocus","useLinkedInputUsingKeypad","LinkedInputUsingKeyboard_Wrapper","replace","readOnly","organisms_VirtualKeyboard_VirtualKeyboard","keyboardNumbers","Bank","RegisterCard_templateObject","RegisterCardWrapper","RegisterCard_templateObject2","Title","RegisterCard_templateObject3","CardNumber","RegisterCard_templateObject4","CardDashDiv","RegisterCard_templateObject5","CardDash","RegisterCard_templateObject6","InputForm","_templateObject7","CardInfo","_templateObject8","ExpirationPeriod","_templateObject9","CVC","_templateObject10","CardPassword","_templateObject11","RegisterCard","first","second","third","fourth","expirationPeriod","cvc","cardPassword","i","j","Math","floor","random","_ref","getKeyboardNumbers","Fragment","LinkedInput_LinkedInput","LinkedInputUsingKeyboard","App_templateObject","App","App_Wrapper","styledReset","templates_RegisterCard_RegisterCard","font","family","xsmall","small","base","large","xlarge","xxlarge","xxxlarge","Boolean","window","location","hostname","match","ReactDOM","render","styled_components_browser_esm","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dcea529f.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst StyledReset = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n    line-height: 1;\n    background: #E9ECEF;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n`;\n\nexport default StyledReset;\n","import styled from 'styled-components';\n\nexport default styled.input<{ inputWidth?: number }>`\n  width: ${p => (p.inputWidth ? p.inputWidth + 'px' : '95%')};\n  height: 28px;\n  font-size: 17px;\n  border: none;\n  color: ${p => p.theme.colors.inputColor};\n`;\n","import React, { useState, useRef, useImperativeHandle, forwardRef } from 'react';\nimport CardRegisterInput from '../../atoms/CardRegisterInput';\n\nconst useLinkedInput = (ref: any, initVal: string, maxLength: number, next?: any) => {\n  const inputRef = useRef<any>();\n  const [value, setValue] = useState(initVal);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value }\n    } = event;\n\n    if (value.length <= maxLength && new RegExp('^[0-9]*$').exec(value)) {\n      setValue(value);\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      inputRef.current.focus();\n    },\n    blur: () => {\n      inputRef.current.blur();\n    },\n    getValue: () => {\n      return value;\n    },\n    getRef: () => {\n      return inputRef.current;\n    },\n    getNext: (findStartItem: any) => {\n      if (next && value.length === maxLength) {\n        if (findStartItem.current === next.current.getRef()) {\n          next.current.blur();\n        } else {\n          next.current.getNext(findStartItem);\n        }\n      } else {\n        if (value.length === maxLength) {\n          inputRef.current.blur();\n        } else {\n          inputRef.current.focus();\n        }\n      }\n    },\n    offFocus: (onFocusRef: any) => {\n      if (onFocusRef.current !== inputRef.current) {\n        inputRef.current.blur();\n        next.current.offFocus(onFocusRef);\n      }\n    }\n  }));\n\n  if (value.length === maxLength && next) {\n    next.current.getNext(inputRef);\n  }\n\n  return { inputRef, value, onChange };\n};\n\ninterface ILinkedInputProps {\n  maxLength: number;\n  type: string;\n  inputWidth?: number;\n  next?: any;\n}\n\nconst LinkedInput = forwardRef((props: ILinkedInputProps, ref: any) => {\n  const state = useLinkedInput(ref, '', props.maxLength, props.next);\n\n  return (\n    <CardRegisterInput\n      ref={state.inputRef}\n      type={props.type}\n      placeholder={'0000'}\n      value={state.value}\n      inputWidth={props.inputWidth}\n      onChange={state.onChange}\n    />\n  );\n});\n\nexport default LinkedInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nconst KeypadHeader = styled.div`\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0 20px;\n  font-size: 14px;\n  background: #8a919f;\n  color: #ffffff;\n`;\n\nconst KeyPad = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  >button: focus {\n    outline: none;\n    border: solid #4480d9;\n    border-width: 3px 0 0 3px;\n  }\n`;\n\nconst KeyPadButton = styled.button`\n  height: 56px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  text-align: center;\n  border: solid #8a919f;\n  border-width: 1px 0 0 1px;\n  background: #9aa2b1;\n  color: #ffffff;\n`;\n\nconst KeypadFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  width: 50%;\n  height: 61px;\n  font-size: 20px;\n  border: solid #8a919f;\n  border-width: 1px 0 0 1px;\n  background: #9aa2b1;\n  color: #ffffff;\n`;\n\ninterface IVirtualKeyboardProps {\n  title: string;\n  numbers: number[];\n  handleKeyboardNumber(val: number): void;\n  handleKeyboardNumberDelete(): void;\n  handleClose(): void;\n}\n\nconst VirtualKeyboard: React.FC<IVirtualKeyboardProps> = props => {\n  return (\n    <Wrapper>\n      <KeypadHeader>\n        <div onClick={() => props.handleClose()}>닫기</div>\n      </KeypadHeader>\n      <KeyPad>\n        {props.numbers.map(val => (\n          <KeyPadButton\n            key={props.title + val}\n            onClick={() => {\n              if (val !== -1) {\n                props.handleKeyboardNumber(val);\n              }\n            }}>\n            {val >= 0 && val}\n          </KeyPadButton>\n        ))}\n      </KeyPad>\n      <KeypadFooter>\n        <Button onClick={() => props.handleKeyboardNumberDelete()}>전체삭제</Button>\n        <Button onClick={() => props.handleKeyboardNumberDelete()}>삭제</Button>\n      </KeypadFooter>\n    </Wrapper>\n  );\n};\n\nexport default VirtualKeyboard;\n","import React, { useEffect, useRef, useImperativeHandle, forwardRef, useState } from 'react';\nimport styled from 'styled-components';\nimport CardRegisterInput from '../../atoms/CardRegisterInput';\nimport VirtualKeyboard from '../../organisms/VirtualKeyboard';\n\nconst Wrapper = styled.div<{ isFocus: boolean }>`\n  > input {\n    outline: none;\n    border: ${p => (p.isFocus ? 1 : 0)}px solid #4480d9;\n  }\n`;\n\nconst useLinkedInputUsingKeypad = (ref: any, initVal: string, maxLength: number, next?: any) => {\n  const inputRef = useRef<any>();\n  const keyboard = useRef<any>();\n  const [value, setValue] = useState('');\n  const [isFocus, handleFocus] = useState(false);\n\n  const handleDocumentClickEvent = (e: any) => {\n    if (!keyboard || !keyboard.current) {\n      return;\n    }\n\n    if (keyboard && (keyboard.current.contains(e.target) || e.target === inputRef.current)) {\n      handleFocus(true);\n    } else {\n      handleFocus(false);\n    }\n  };\n\n  const onChangeFocus = (val: boolean) => {\n    handleFocus(val);\n  };\n\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      inputRef.current.focus();\n    },\n    blur: () => {\n      inputRef.current.blur();\n    },\n    getValue: () => {\n      return value;\n    },\n    setValue: (val: string) => {\n      if (value.length < maxLength) {\n        setValue(value + val);\n        if (value.length === maxLength - 1) {\n          handleFocus(false);\n          document.removeEventListener('click', handleDocumentClickEvent, true);\n          next.current.getNext(inputRef);\n        }\n      }\n    },\n    removeLastValue: () => {\n      if (value.length > 0) {\n        setValue(value.slice(0, -1));\n      }\n    },\n    getRef: () => {\n      return inputRef.current;\n    },\n    getNext: (findStartItem: any) => {\n      if (next && value.length === maxLength) {\n        if (findStartItem.current === next.current.getRef()) {\n          next.current.blur();\n        } else {\n          next.current.getNext(findStartItem);\n        }\n      } else {\n        inputRef.current.focus();\n      }\n    },\n    offFocus: (onFocusRef: any) => {\n      if (onFocusRef.current !== inputRef.current) {\n        if (isFocus) {\n          handleFocus(false);\n        }\n        next.current.offFocus(onFocusRef);\n      }\n    }\n  }));\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.addEventListener('click', () => {\n        setValue('');\n        handleFocus(true);\n      });\n      inputRef.current.addEventListener('focus', () => {\n        handleFocus(true);\n      });\n    }\n\n    document.addEventListener('click', e => handleDocumentClickEvent(e), true);\n  }, [inputRef, isFocus]);\n\n  return { inputRef, value, isFocus, keyboard, onChangeFocus };\n};\n\ninterface ILinkedInputProps {\n  maxLength: number;\n  title: string;\n  placeholder: string;\n  keyboardNumbers: number[];\n  inputWidth?: number;\n  next?: any;\n}\n\nconst LinkedInputUsingKeypad = forwardRef((props: ILinkedInputProps, ref: any) => {\n  const state = useLinkedInputUsingKeypad(ref, '', props.maxLength, props.next);\n  const handleKeyboardNumber = (val: number) => {\n    ref.current.setValue(val);\n  };\n\n  const handleKeyboardNumberDelete = () => {\n    ref.current.removeLastValue();\n  };\n\n  const handleClose = () => {\n    state.onChangeFocus(false);\n  };\n\n  return (\n    <Wrapper isFocus={state.isFocus}>\n      <CardRegisterInput\n        ref={state.inputRef}\n        placeholder={props.placeholder}\n        value={state.value.replace(/[0-9]/g, '*')}\n        inputWidth={props.inputWidth}\n        readOnly\n      />\n      {state.isFocus && (\n        <div ref={state.keyboard}>\n          <VirtualKeyboard\n            title={props.title}\n            numbers={props.keyboardNumbers}\n            handleKeyboardNumber={handleKeyboardNumber}\n            handleKeyboardNumberDelete={handleKeyboardNumberDelete}\n            handleClose={handleClose}\n          />\n        </div>\n      )}\n    </Wrapper>\n  );\n});\n\nexport default LinkedInputUsingKeypad;\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport LinkedInput from '../../molecules/LinkedInput';\nimport LinkedInputUsingKeyboard from '../../molecules/LinkedInputUsingKeyboard';\nconst Bank = styled.div`\n  padding: 20px;\n  font-size: 20px;\n  background: #ffdf00;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst RegisterCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid #e2e6e9;\n  border-right: 1px solid #e2e6e9;\n  background: #ffffff;\n`;\n\nconst Title = styled.div`\n  font-size: 13px;\n`;\n\nconst CardNumber = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0px 13px;\n  height: 80px;\n  border-bottom: 1px solid #e2e6e9;\n`;\n\nconst CardDashDiv = styled.div`\n  margin: 0 8px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst CardDash = styled.div`\n  width: 4px;\n  height: 1px;\n  background: #333333;\n`;\n\nconst InputForm = styled.div`\n  margin-top: 5px;\n  display: flex;\n  flex-direction: row;\n  >input: focus {\n    outline: none;\n    border: 1px solid #4480d9;\n  }\n`;\n\nconst CardInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0px 13px;\n  height: 80px;\n`;\n\nconst ExpirationPeriod = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n  height: 80px;\n  border-right: 1px solid #e2e6e9;\n`;\n\nconst CVC = styled.div`\n  padding-left: 13px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n  height: 80px;\n`;\n\nconst CardPassword = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-top: 1px solid #e2e6e9;\n  border-bottom: 1px solid #e2e6e9;\n  padding: 0px 13px;\n  height: 80px;\n`;\n\nconst getKeyboardNumbers = () => {\n  const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -1];\n  for (let i = numbers.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\n  }\n\n  return numbers;\n};\n\nconst RegisterCard: React.FC = () => {\n  const first = useRef<any>();\n  const second = useRef<any>();\n  const third = useRef<any>();\n  const fourth = useRef<any>();\n  const expirationPeriod = useRef<any>();\n  const cvc = useRef<any>();\n  const cardPassword = useRef<any>();\n  const keyboardNumbers = getKeyboardNumbers();\n  return (\n    <>\n      <Bank>kakao bank</Bank>\n      <RegisterCardWrapper>\n        <CardNumber>\n          <Title>카드번호</Title>\n          <InputForm>\n            <LinkedInput ref={first} type=\"tel\" maxLength={4} inputWidth={50} next={second} />\n            <CardDashDiv>\n              <CardDash />\n            </CardDashDiv>\n            <LinkedInput ref={second} type=\"tel\" maxLength={4} inputWidth={50} next={third} />\n            <CardDashDiv>\n              <CardDash />\n            </CardDashDiv>\n            <LinkedInputUsingKeyboard\n              ref={third}\n              title=\"third-card-number\"\n              keyboardNumbers={keyboardNumbers}\n              placeholder=\"0000\"\n              maxLength={4}\n              inputWidth={50}\n              next={fourth}\n            />\n            <CardDashDiv>\n              <CardDash />\n            </CardDashDiv>\n            <LinkedInputUsingKeyboard\n              ref={fourth}\n              title=\"fourth-card-number\"\n              keyboardNumbers={keyboardNumbers}\n              placeholder=\"0000\"\n              maxLength={4}\n              inputWidth={50}\n              next={expirationPeriod}\n            />\n          </InputForm>\n        </CardNumber>\n        <CardInfo>\n          <ExpirationPeriod>\n            <Title>유효기간</Title>\n            <LinkedInputUsingKeyboard\n              ref={expirationPeriod}\n              title=\"expiration-period-number\"\n              keyboardNumbers={keyboardNumbers}\n              placeholder=\"MMYY\"\n              maxLength={4}\n              next={cvc}\n            />\n          </ExpirationPeriod>\n          <CVC>\n            <Title>CVC</Title>\n            <LinkedInputUsingKeyboard\n              ref={cvc}\n              title=\"cvc-number\"\n              keyboardNumbers={keyboardNumbers}\n              placeholder=\"카드 뒷면 3자리 숫자\"\n              maxLength={3}\n              next={cardPassword}\n            />\n          </CVC>\n        </CardInfo>\n        <CardPassword>\n          <Title>카드 비밀번호</Title>\n          <LinkedInputUsingKeyboard\n            ref={cardPassword}\n            title=\"card-password-number\"\n            keyboardNumbers={keyboardNumbers}\n            placeholder=\"비밀번호 앞 2자리 숫자\"\n            maxLength={2}\n            next={first}\n          />\n        </CardPassword>\n      </RegisterCardWrapper>\n    </>\n  );\n};\n\nexport default RegisterCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport StyledReset from './styledComponents/styledReset';\nimport RegisterCard from './components/templates/RegisterCard';\n\nconst Wrapper = styled.div`\n  padding: 8px;\n`;\nconst App: React.FC = () => {\n  return (\n    <Wrapper>\n      <StyledReset />\n      <RegisterCard />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","export interface IDefaultTheme {\n  colors: {\n    inputColor: string;\n  };\n\n  font: {\n    family: string;\n    base: string;\n    small: string;\n    xsmall: string;\n    large: string;\n    xlarge: string;\n    xxlarge: string;\n    xxxlarge: string;\n  };\n}\n\nconst theme: IDefaultTheme = {\n  colors: {\n    inputColor: '#8f8f8f'\n  },\n\n  font: {\n    family: `'Noto Sans KR', -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Arial, sans-serif`,\n    xsmall: '9px',\n    small: '10px',\n    base: '13px',\n    large: '15px',\n    xlarge: '20px',\n    xxlarge: '25px',\n    xxxlarge: '31px'\n  }\n};\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './styledComponents/theme';\n//\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}