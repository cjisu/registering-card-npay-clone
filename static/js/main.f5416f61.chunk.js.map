{"version":3,"sources":["styledComponents/styledReset.ts","components/atoms/CardRegisterInput/CardRegisterInput.tsx","components/molecules/LinkedInput/LinkedInput.tsx","components/organisms/VirtualKeyboard/VirtualKeyboard.tsx","components/molecules/LinkedInputUsingKeyboard/LinkedInputUsingKeyboard.tsx","components/templates/RegisterCard/RegisterCard.tsx","App.tsx","styledComponents/theme.ts","serviceWorker.ts","index.tsx"],"names":["StyledReset","createGlobalStyle","_templateObject","styled","input","CardRegisterInput_templateObject","p","inputWidth","theme","colors","inputColor","LinkedInput","forwardRef","props","ref","state","initVal","maxLength","next","inputRef","useRef","_useState","useState","_useState2","Object","slicedToArray","value","setValue","useImperativeHandle","focus","current","blur","getValue","getRef","getNext","findStartItem","length","onChange","event","target","RegExp","exec","useLinkedInput","react_default","a","createElement","CardRegisterInput","type","placeholder","Wrapper","div","VirtualKeyboard_templateObject","KeypadHeader","_templateObject2","KeyPad","_templateObject3","KeyPadButton","button","_templateObject4","KeypadFooter","_templateObject5","Button","_templateObject6","VirtualKeyboard","onClick","handleClose","map","val","key","handleKeyboardNumber","handleKeyboardNumberDelete","LinkedInputUsingKeyboard_templateObject","isFocus","LinkedInputUsingKeypad","keyboard","_useState3","_useState4","handleFocus","removeLastValue","slice","useEffect","addEventListener","document","e","contains","onChangeFocus","useLinkedInputUsingKeypad","LinkedInputUsingKeyboard_Wrapper","replace","readOnly","organisms_VirtualKeyboard_VirtualKeyboard","Bank","RegisterCard_templateObject","RegisterCardWrapper","RegisterCard_templateObject2","Title","RegisterCard_templateObject3","CardNumber","RegisterCard_templateObject4","CardDashDiv","RegisterCard_templateObject5","CardDash","RegisterCard_templateObject6","InputForm","_templateObject7","CardInfo","_templateObject8","ExpirationPeriod","_templateObject9","CVC","_templateObject10","CardPassword","_templateObject11","RegisterCard","first","second","third","fourth","expirationPeriod","cvc","cardPassword","Fragment","LinkedInput_LinkedInput","LinkedInputUsingKeyboard","App_templateObject","App","App_Wrapper","styledReset","templates_RegisterCard_RegisterCard","font","family","xsmall","small","base","large","xlarge","xxlarge","xxxlarge","Boolean","window","location","hostname","match","ReactDOM","render","styled_components_browser_esm","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5416f61.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst StyledReset = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n    line-height: 1;\n    background: #E9ECEF;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n`;\n\nexport default StyledReset;\n","import styled from 'styled-components';\n\nexport default styled.input<{ inputWidth?: number }>`\n  width: ${p => (p.inputWidth ? p.inputWidth + 'px' : '95%')};\n  height: 28px;\n  font-size: 17px;\n  border: none;\n  color: ${p => p.theme.colors.inputColor};\n`;\n","import React, { useState, useRef, useImperativeHandle, forwardRef } from 'react';\nimport CardRegisterInput from '../../atoms/CardRegisterInput';\n\nconst useLinkedInput = (ref: any, initVal: string, maxLength: number, next?: any) => {\n  const inputRef = useRef<any>();\n  const [value, setValue] = useState(initVal);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value }\n    } = event;\n\n    if (value.length <= maxLength && new RegExp('^[0-9]*$').exec(value)) {\n      setValue(value);\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      inputRef.current.focus();\n    },\n    blur: () => {\n      inputRef.current.blur();\n    },\n    getValue: () => {\n      return value;\n    },\n    getRef: () => {\n      return inputRef.current;\n    },\n    getNext: (findStartItem: any) => {\n      if (next && value.length === maxLength) {\n        if (findStartItem.current === next.current.getRef()) {\n          next.current.blur();\n        } else {\n          next.current.getNext(findStartItem);\n        }\n      } else {\n        if (value.length === maxLength) {\n          inputRef.current.blur();\n        } else {\n          inputRef.current.focus();\n        }\n      }\n    }\n  }));\n\n  if (value.length === maxLength && next) {\n    next.current.getNext(inputRef);\n  }\n\n  return { inputRef, value, onChange };\n};\n\ninterface ILinkedInputProps {\n  maxLength: number;\n  type: string;\n  inputWidth?: number;\n  next?: any;\n}\n\nconst LinkedInput = forwardRef((props: ILinkedInputProps, ref: any) => {\n  const state = useLinkedInput(ref, '', props.maxLength, props.next);\n\n  return (\n    <CardRegisterInput\n      ref={state.inputRef}\n      type={props.type}\n      placeholder={'0000'}\n      value={state.value}\n      inputWidth={props.inputWidth}\n      onChange={state.onChange}\n    />\n  );\n});\n\nexport default LinkedInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nconst KeypadHeader = styled.div`\n  height: 32px;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 0 20px;\n  font-size: 14px;\n  background: #8a919f;\n  color: #ffffff;\n`;\n\nconst KeyPad = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  >button: focus {\n    outline: none;\n    border: solid #4480d9;\n    border-width: 3px 0 0 3px;\n  }\n`;\n\nconst KeyPadButton = styled.button`\n  height: 56px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  text-align: center;\n  border: solid #8a919f;\n  border-width: 1px 0 0 1px;\n  background: #9aa2b1;\n  color: #ffffff;\n`;\n\nconst KeypadFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  width: 50%;\n  height: 61px;\n  font-size: 20px;\n  border: solid #8a919f;\n  border-width: 1px 0 0 1px;\n  background: #9aa2b1;\n  color: #ffffff;\n`;\n\ninterface IVirtualKeyboardProps {\n  handleKeyboardNumber(val: number): void;\n  handleKeyboardNumberDelete(): void;\n  handleClose(): void;\n}\n\nconst VirtualKeyboard: React.FC<IVirtualKeyboardProps> = props => {\n  return (\n    <Wrapper>\n      <KeypadHeader>\n        <div onClick={() => props.handleClose()}>닫기</div>\n      </KeypadHeader>\n      <KeyPad>\n        {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -1].map(val => (\n          <KeyPadButton key={'keypad' + val} onClick={() => props.handleKeyboardNumber(val)}>\n            {val >= 0 && val}\n          </KeyPadButton>\n        ))}\n        {/* <KeyPadButton onClick={() => props.handleKeyboardNumberDelete()}>\n        </KeyPadButton> */}\n      </KeyPad>\n      <KeypadFooter>\n        <Button onClick={() => props.handleKeyboardNumberDelete()}>전체삭제</Button>\n        <Button onClick={() => props.handleKeyboardNumberDelete()}>삭제</Button>\n      </KeypadFooter>\n    </Wrapper>\n  );\n};\n\nexport default VirtualKeyboard;\n","import React, { useEffect, useRef, useImperativeHandle, forwardRef, useState } from 'react';\nimport styled from 'styled-components';\nimport CardRegisterInput from '../../atoms/CardRegisterInput';\nimport VirtualKeyboard from '../../organisms/VirtualKeyboard';\n\nconst Wrapper = styled.div<{ isFocus: boolean }>`\n  > input {\n    outline: none;\n    border: ${p => (p.isFocus ? 1 : 0)}px solid #4480d9;\n  }\n`;\n\nconst useLinkedInputUsingKeypad = (ref: any, initVal: string, maxLength: number, next?: any) => {\n  const inputRef = useRef<any>();\n  const keyboard = useRef<any>();\n  const [value, setValue] = useState('');\n  const [isFocus, handleFocus] = useState(false);\n\n  const onChangeFocus = (val: boolean) => {\n    handleFocus(val);\n  };\n\n  useImperativeHandle(ref, () => ({\n    focus: () => {\n      handleFocus(true);\n      inputRef.current.focus();\n    },\n    blur: () => {\n      inputRef.current.blur();\n    },\n    getValue: () => {\n      return value;\n    },\n    setValue: (val: string) => {\n      if (value.length < maxLength) {\n        setValue(value + val);\n        if (value.length === maxLength - 1) {\n          handleFocus(false);\n        }\n      }\n    },\n    removeLastValue: () => {\n      if (value.length > 0) {\n        setValue(value.slice(0, -1));\n      }\n    },\n    getRef: () => {\n      return inputRef.current;\n    },\n    getNext: (findStartItem: any) => {\n      if (next && value.length === maxLength) {\n        if (findStartItem.current === next.current.getRef()) {\n          next.current.blur();\n        } else {\n          next.current.getNext(findStartItem);\n        }\n      } else {\n        if (value.length === maxLength) {\n          inputRef.current.blur();\n        } else {\n          inputRef.current.focus();\n        }\n      }\n    }\n  }));\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.addEventListener('click', () => {\n        setValue('');\n        inputRef.current.focus();\n      });\n      inputRef.current.addEventListener('focus', () => {\n        handleFocus(true);\n      });\n    }\n\n    document.addEventListener('click', e => {\n      if (!keyboard || !keyboard.current) {\n        return;\n      }\n\n      if (keyboard && (keyboard.current.contains(e.target) || e.target === inputRef.current)) {\n        handleFocus(true);\n      } else {\n        handleFocus(false);\n      }\n    });\n  });\n\n  if (value.length === maxLength && next) {\n    next.current.getNext(inputRef);\n  }\n\n  return { inputRef, value, isFocus, keyboard, onChangeFocus };\n};\n\ninterface ILinkedInputProps {\n  maxLength: number;\n  placeholder: string;\n  inputWidth?: number;\n  next?: any;\n}\n\nconst LinkedInputUsingKeypad = forwardRef((props: ILinkedInputProps, ref: any) => {\n  const state = useLinkedInputUsingKeypad(ref, '', props.maxLength, props.next);\n  const handleKeyboardNumber = (val: number) => {\n    ref.current.setValue(val);\n  };\n\n  const handleKeyboardNumberDelete = () => {\n    ref.current.removeLastValue();\n  };\n\n  const handleClose = () => {\n    state.onChangeFocus(false);\n  };\n\n  return (\n    <Wrapper isFocus={state.isFocus}>\n      <CardRegisterInput\n        ref={state.inputRef}\n        placeholder={props.placeholder}\n        value={state.value.replace(/[0-9]/g, '*')}\n        inputWidth={props.inputWidth}\n        readOnly\n      />\n      {state.isFocus && (\n        <div ref={state.keyboard}>\n          <VirtualKeyboard\n            handleKeyboardNumber={handleKeyboardNumber}\n            handleKeyboardNumberDelete={handleKeyboardNumberDelete}\n            handleClose={handleClose}\n          />\n        </div>\n      )}\n    </Wrapper>\n  );\n});\n\nexport default LinkedInputUsingKeypad;\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport LinkedInput from '../../molecules/LinkedInput';\nimport LinkedInputUsingKeyboard from '../../molecules/LinkedInputUsingKeyboard';\nconst Bank = styled.div`\n  padding: 20px;\n  font-size: 20px;\n  background: #ffdf00;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst RegisterCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid #e2e6e9;\n  border-right: 1px solid #e2e6e9;\n  background: #ffffff;\n`;\n\nconst Title = styled.div`\n  font-size: 13px;\n`;\n\nconst CardNumber = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 0px 13px;\n  height: 80px;\n  border-bottom: 1px solid #e2e6e9;\n`;\n\nconst CardDashDiv = styled.div`\n  margin: 0 8px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst CardDash = styled.div`\n  width: 4px;\n  height: 1px;\n  background: #333333;\n`;\n\nconst InputForm = styled.div`\n  margin-top: 5px;\n  display: flex;\n  flex-direction: row;\n  >input: focus {\n    outline: none;\n    border: 1px solid #4480d9;\n  }\n`;\n\nconst CardInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 0px 13px;\n  height: 80px;\n`;\n\nconst ExpirationPeriod = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n  height: 80px;\n  border-right: 1px solid #e2e6e9;\n`;\n\nconst CVC = styled.div`\n  padding-left: 13px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 50%;\n  height: 80px;\n`;\n\nconst CardPassword = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-top: 1px solid #e2e6e9;\n  border-bottom: 1px solid #e2e6e9;\n  padding: 0px 13px;\n  height: 80px;\n`;\n\nconst RegisterCard: React.FC = () => {\n  const first = useRef<any>();\n  const second = useRef<any>();\n  const third = useRef<any>();\n  const fourth = useRef<any>();\n  const expirationPeriod = useRef<any>();\n  const cvc = useRef<any>();\n  const cardPassword = useRef<any>();\n\n  return (\n    <>\n      <Bank>kakao bank</Bank>\n      <RegisterCardWrapper>\n        <CardNumber>\n          <Title>카드번호</Title>\n          <InputForm>\n            <LinkedInput ref={first} type=\"tel\" maxLength={4} inputWidth={50} next={second} />\n            <CardDashDiv>\n              <CardDash />\n            </CardDashDiv>\n            <LinkedInput ref={second} type=\"tel\" maxLength={4} inputWidth={50} next={third} />\n            <CardDashDiv>\n              <CardDash />\n            </CardDashDiv>\n            <LinkedInputUsingKeyboard ref={third} placeholder=\"0000\" maxLength={4} inputWidth={50} next={fourth} />\n            <CardDashDiv>\n              <CardDash />\n            </CardDashDiv>\n            <LinkedInputUsingKeyboard\n              ref={fourth}\n              placeholder=\"0000\"\n              maxLength={4}\n              inputWidth={50}\n              next={expirationPeriod}\n            />\n          </InputForm>\n        </CardNumber>\n        <CardInfo>\n          <ExpirationPeriod>\n            <Title>유효기간</Title>\n            <LinkedInputUsingKeyboard ref={expirationPeriod} placeholder=\"MMYY\" maxLength={4} next={cvc} />\n          </ExpirationPeriod>\n          <CVC>\n            <Title>CVC</Title>\n            <LinkedInputUsingKeyboard ref={cvc} placeholder=\"카드 뒷면 3자리 숫자\" maxLength={3} next={cardPassword} />\n          </CVC>\n        </CardInfo>\n        <CardPassword>\n          <Title>카드 비밀번호</Title>\n          <LinkedInputUsingKeyboard\n            ref={cardPassword}\n            placeholder=\"비밀번호 앞 2자리 숫자\"\n            maxLength={2}\n            next={first}\n          />\n        </CardPassword>\n      </RegisterCardWrapper>\n    </>\n  );\n};\n\nexport default RegisterCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport StyledReset from './styledComponents/styledReset';\nimport RegisterCard from './components/templates/RegisterCard';\n\nconst Wrapper = styled.div`\n  padding: 8px;\n`;\nconst App: React.FC = () => {\n  return (\n    <Wrapper>\n      <StyledReset />\n      <RegisterCard />\n    </Wrapper>\n  );\n};\n\nexport default App;\n","export interface IDefaultTheme {\n  colors: {\n    inputColor: string;\n  };\n\n  font: {\n    family: string;\n    base: string;\n    small: string;\n    xsmall: string;\n    large: string;\n    xlarge: string;\n    xxlarge: string;\n    xxxlarge: string;\n  };\n}\n\nconst theme: IDefaultTheme = {\n  colors: {\n    inputColor: '#8f8f8f'\n  },\n\n  font: {\n    family: `'Noto Sans KR', -apple-system, BlinkMacSystemFont, 'Helvetica Neue', Arial, sans-serif`,\n    xsmall: '9px',\n    small: '10px',\n    base: '13px',\n    large: '15px',\n    xlarge: '20px',\n    xxlarge: '25px',\n    xxxlarge: '31px'\n  }\n};\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './styledComponents/theme';\n//\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}